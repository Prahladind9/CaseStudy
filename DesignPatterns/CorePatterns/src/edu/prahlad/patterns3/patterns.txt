Design Principle
1) Identify the aspects of your application that vary &
    separate them from what stays the same.
2) Program to an interface, not an implementation
    Delegating behaviour during runtime.
3) Favor composition over inheritance
    HAS-A can be better than IS-A
4) Shared Vocabulary, makes us think at the pattern level
5) Strive for loosely coupled designs between objects that interact.

Behavioural

1) StrategyPattern
    defines a family of algorithms, encapsulates each one,
    and makes them interchangeable.
    Strategy lets the algorithm vary independently from clients that use it.