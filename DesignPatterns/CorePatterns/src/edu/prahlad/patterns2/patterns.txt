CodeWithMosh Course

Basics
    Programming to an interface
    Interface: A contract that specifies the capabilities that a class should provide
    Inheritance, Polymorphism, encapsulation
    Abstraction:Reduce complexity by hiding unnecessary details
    Single Responsibility Principle
    Open Close Principle - open for extension, closed for modification
    Simplicity is the ultimate sophistication - keep things simple & pragmatic

    Don't Abuse Design Patterns - Understand the requirement & Context

Behavioural Patterns
    1) Momento Pattern - implement undo mechanism
    2) State Pattern
    3) Iterator Pattern
    4) Strategy Pattern
    5) Template Pattern
    6) Command Pattern
    7) Observer Pattern
    8) Mediator Pattern
    9) Chain Of Responsibility
    10) Visitor

Structural Patterns
    1) Composite Pattern
    2) Adapter Pattern
    3) Facade Pattern
    4) Decorator Pattern
    5) Flyweight Pattern
    6) Bridge Pattern